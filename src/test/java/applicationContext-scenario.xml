<?xml version="1.0" encoding="UTF-8"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2015 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans org/springframework/beans/factory/xml/spring-beans-2.5.xsd">
    <bean id="cleanupScenario" autowire="constructor" class="com.thoughtworks.cruise.preconditions.CleanupScenario" lazy-init="false" />
    <!--bean id="cleanupTfsWorkspaces" autowire="constructor" class="com.thoughtworks.cruise.preconditions.CleanupTfsWorkspaces" lazy-init="false" -->
    <bean id="usingAgentsApi" autowire="constructor" class="com.thoughtworks.cruise.api.UsingAgentsApi"/>
    <bean id="usingStageApi" autowire="constructor" class="com.thoughtworks.cruise.api.UsingStageApi"/>
    <bean id="usingConfigVersioningApi" autowire="constructor" class="com.thoughtworks.cruise.api.UsingConfigVersioningApi"/>
    <bean id="scenarioState" autowire="constructor" class="com.thoughtworks.cruise.state.ScenarioState"/>
    <bean id="oauthState" autowire="constructor" class="com.thoughtworks.cruise.state.OauthState" lazy-init="true"/>
    <bean id="configuration" autowire="constructor" class="com.thoughtworks.cruise.context.Configuration"/>
    <bean id="usingPipeline" autowire="constructor" class="com.thoughtworks.cruise.context.UsingPipeline"/>
    <bean id="onLoginPage" autowire="constructor" class="com.thoughtworks.cruise.page.OnLoginPage" lazy-init="true"/>
    <bean id="onAnyPage" autowire="constructor" class="com.thoughtworks.cruise.page.OnAnyPage" lazy-init="true"/>
    <bean id="onAgentsPage" autowire="constructor" class="com.thoughtworks.cruise.page.OnAgentsPage" lazy-init="true"/>
    <bean id="onPipelineDashboardPage" autowire="constructor" class="com.thoughtworks.cruise.page.OnPipelineDashboardPage" lazy-init="true"/>
    <bean id="usingPipelineDashboardAPI" autowire="constructor" class="com.thoughtworks.cruise.page.UsingPipelineDashboardAPI" lazy-init="true"/>
    <bean id="usingPipelineApi" autowire="constructor" class="com.thoughtworks.cruise.api.UsingPipelineApi" lazy-init="true"/>
    <bean id="environmentState" autowire="constructor" class="com.thoughtworks.cruise.state.EnvironmentState" lazy-init="true"/>
    <bean id="repositoryState" autowire="constructor" class="com.thoughtworks.cruise.state.RepositoryState" lazy-init="true"/>
    <bean id="currentPageState" autowire="constructor" class="com.thoughtworks.cruise.state.CurrentPageState" lazy-init="true"/>
    <bean id="cruiseAgents" autowire="constructor" class="com.thoughtworks.cruise.CruiseAgents" lazy-init="true"/>
    <bean id="talkToCruise" autowire="constructor" class="com.thoughtworks.cruise.client.TalkToCruise" lazy-init="true"/>
    <bean id="scenarioHelper" autowire="constructor" class="com.thoughtworks.cruise.utils.ScenarioHelper" lazy-init="true"/>
    <bean id="jobState" autowire="constructor" class="com.thoughtworks.cruise.state.JobState" lazy-init="true"/>
    <bean id="configState" autowire="constructor" class="com.thoughtworks.cruise.state.ConfigState" lazy-init="true"/>
    <bean id="alreadyOnGeneralOptionsPage" autowire="constructor" class="com.thoughtworks.cruise.editpipelinewizard.AlreadyOnGeneralOptionsPage" lazy-init="true"/>
    <bean id="alreadyOnProjectManagementPage" autowire="constructor" class="com.thoughtworks.cruise.editpipelinewizard.AlreadyOnProjectManagementPage" lazy-init="true"/>
    <bean id="alreadyOnArtifactsListingPage" autowire="constructor" class="com.thoughtworks.cruise.editpipelinewizard.AlreadyOnArtifactsListingPage" lazy-init="true"/>
    <bean id="artifactFilesystem" autowire="constructor" class="com.thoughtworks.cruise.state.ArtifactFilesystem" lazy-init="true"/>
<bean class="com.thoughtworks.twist.core.execution.TwistDataStoreFactory" id="twistDataStoreFactory"/>
   <bean factory-bean="twistDataStoreFactory" factory-method="getScenarioStore" id="twistScenarioStore" scope="singleton"/>
<bean class="ScenarioExecutionHooks" id="twistScenarioHooks">
      <constructor-arg>
         <ref bean="browser"/>
      </constructor-arg>
   </bean>
</beans>
